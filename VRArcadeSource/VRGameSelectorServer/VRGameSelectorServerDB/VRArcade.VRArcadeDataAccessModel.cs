//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using Telerik Data Access template.
// Code is generated on: 3/3/2019 8:16:36 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.ComponentModel;
using System.Reflection;
using System.Data.Common;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;

namespace VRGameSelectorServerDB
{
    public partial class VRArcadeDataAccessModel : OpenAccessContext
    {

        private static BackendConfiguration backend = GetBackendConfiguration();
        private static MetadataSource metadataSource = new VRArcadeDataAccessModelMetadataSource();
        private static readonly MetadataContainer metadataContainer = metadataSource.GetModel();
        private static string connectionString = @"VRArcadeDataAccessModelConnectionString";

        public VRArcadeDataAccessModel() :
            base(connectionString, backend, metadataContainer)
        {
            OnCreated();
        }

        public VRArcadeDataAccessModel(BackendConfiguration backendConfiguration) :
            base(connectionString, backendConfiguration, metadataContainer)
        {
          OnCreated();
        }

        public VRArcadeDataAccessModel(string connection) :
            base(connection, backend, metadataContainer)
        {
          OnCreated();
        }

        public VRArcadeDataAccessModel(string connection, string cacheKey) :
            base(connection, cacheKey, backend, metadataContainer)
        {
            OnCreated();
        }

        public VRArcadeDataAccessModel(string connection, MetadataSource metadataSource) :
            base(connection, backend, metadataSource)
        {
          OnCreated();
        }

        public VRArcadeDataAccessModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource) :
            base(connection, backendConfiguration, metadataSource)
        {
          OnCreated();
        }
        public VRArcadeDataAccessModel(string connection, string cacheKey, BackendConfiguration backendConfiguration, MetadataSource metadataSource) :
            base(connection, cacheKey, backendConfiguration, metadataSource)
        {
          OnCreated();
        }

        public IQueryable<VRClienthistory> VRClienthistories
        {
            get
            {
                return this.GetAll<VRClienthistory>();
            }
        }

        public IQueryable<VRClient> VRClients
        {
            get
            {
                return this.GetAll<VRClient>();
            }
        }

        public IQueryable<VRConfiguration> VRConfigurations
        {
            get
            {
                return this.GetAll<VRConfiguration>();
            }
        }

        public IQueryable<VRTileconfig> VRTileconfigs
        {
            get
            {
                return this.GetAll<VRTileconfig>();
            }
        }

        public IQueryable<VRTileconfigset> VRTileconfigsets
        {
            get
            {
                return this.GetAll<VRTileconfigset>();
            }
        }

        public IQueryable<VRTicket> VRTickets
        {
            get
            {
                return this.GetAll<VRTicket>();
            }
        }

        public IQueryable<VRTicketType> VRTicketTypes
        {
            get
            {
                return this.GetAll<VRTicketType>();
            }
        }

        public IQueryable<VRManageLog> VRManageLogs
        {
            get
            {
                return this.GetAll<VRManageLog>();
            }
        }

        public IQueryable<VRWaiverLog> VRWaiverLogs
        {
            get
            {
                return this.GetAll<VRWaiverLog>();
            }
        }

        public IQueryable<VRBookingReference> VRBookingReferences
        {
            get
            {
                return this.GetAll<VRBookingReference>();
            }
        }

        public static BackendConfiguration GetBackendConfiguration()
        {
            BackendConfiguration backend = new BackendConfiguration();
            backend.Backend = "MySql";
            backend.ProviderName = "MySql.Data.MySqlClient";
            backend.Runtime.ReturnNullForRowNotFound = true;
            backend.SecondLevelCache.CacheQueryResults = true;
            backend.SecondLevelCache.Enabled = true;
            backend.SecondLevelCache.Strategy = CacheStrategy.No;

            CustomizeBackendConfiguration(ref backend);
            return backend;
        }

        static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
        partial void OnCreated();
    }
}
